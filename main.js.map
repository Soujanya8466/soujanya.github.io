{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/adddata/adddata.component.css","webpack:///./src/app/adddata/adddata.component.html","webpack:///./src/app/adddata/adddata.component.ts","webpack:///./src/app/additeam/additeam.component.css","webpack:///./src/app/additeam/additeam.component.html","webpack:///./src/app/additeam/additeam.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".add{\\r\\n    background: #2196f394;\\r\\n    color: white;\\r\\n}\\r\\n.mat-elevation-z8{\\r\\n    width:100% !important;\\r\\n}\\r\\n.iteamtable{\\r\\n    border: 2px solid #00000029;\\r\\n    margin-top: 19px;\\r\\n}\\r\\ntr,th,td{\\r\\n    border: 1px solid #00000038  !important;\\r\\n}\\r\\nth{\\r\\n    background: #0000ff42;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<button mat-button class=\\\"add\\\" routerLink=\\\"/additeam\\\">Add Inventory</button>\\r\\n\\r\\n<!-- <div *ngFor=\\\"let userdata of userdata\\\">\\r\\n  <span>{{userdata.id}}</span>\\r\\n</div> -->\\r\\n\\r\\n<!--  -->\\r\\n<table class=\\\"iteamtable\\\"  >\\r\\n  <tr>\\r\\n    <th>S.No</th>\\r\\n    <th>Name</th>\\r\\n    <th>Description</th>\\r\\n    <th>Price</th>\\r\\n    <th>Delete</th>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let userdata of userdata;let i=index\\\">\\r\\n    <td>{{i+1}}</td>\\r\\n    <td>{{userdata.name}}</td>\\r\\n    <td>{{userdata.description}}</td>\\r\\n    <td>{{userdata.price}}</td>\\r\\n    <td (click)=\\\"deletiteam(userdata)\\\"><mat-icon >delete</mat-icon>\\r\\n    </td>\\r\\n\\r\\n\\r\\n\\r\\n  </tr>\\r\\n    <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> S.No </th>\\r\\n      <td mat-cell *matCellDef=\\\"let userdata\\\"> {{userdata.id}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let userdata\\\"> {{userdata.name}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let userdata\\\"> {{userdata.description}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"price\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n      <td mat-cell *matCellDef=\\\"let userdata\\\"> {{userdata.price}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"delete\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\\r\\n      <td mat-cell *matCellDef=\\\"let userdata\\\"> hi </td>\\r\\n    </ng-container>\\r\\n    \\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr> -->\\r\\n     </table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Session } from 'protractor';\n// import 'rxjs/add/operator/filter';\n\n\n\n\n\n\n\n@Component({\n  selector: 'app-adddata',\n  templateUrl: './adddata.component.html',\n  styleUrls: ['./adddata.component.css']\n})\nexport class AdddataComponent implements OnInit {\n\n  constructor(public httpclient:HttpClient) { }\n  displayedColumns: string[] = ['id', 'name', 'description', 'price','delete'];\n  public userdata=[];\n\n\n  deletiteam(userdataa){debugger\n    alert(\" you  deleted the iteam\")\n    let userurl='http://localhost:3000/posts/'+userdataa.id\n    \n    this.httpclient.delete<any>(userurl).subscribe(\n      (response=>{  } ) );\n      window.location.reload();\n\n    \n  }\n  dataSource = this.userdata;\n\n  ngOnInit() {\n    \n    let userurl='http://localhost:3000/posts'\n    \n    this.httpclient.get<any>(userurl).subscribe(\n      (response=>{ this. userdata = response;\n      console.log(this.userdata)\n      } ) );\n\n}\n\n}\n","module.exports = \".container{\\r\\n    margin-top:100px !important;\\r\\n}\\r\\n.headerapp{\\r\\n  color:  #118a0a !important;\\r\\n}\\r\\n.form-group{\\r\\n    margin:5px !important;\\r\\n}\"","module.exports = \"<!-- main app container -->\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n\\n      <h3 class=\\\"headerapp\\\">Please Provide iteam Details</h3>\\n      </div></div>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n\\n              <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\">\\n                      <label>Iteam Name :</label></div>\\n                      <div class=\\\"col-md-3\\\">\\n                      <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" /></div>\\n                     </div>\\n                     <div class=\\\"row\\\">\\n                         <div class=\\\"col-md-3\\\"></div>\\n                         <div class=\\\"col-md-6\\\">\\n                          <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.name.errors.required\\\" style=\\\"color:red;\\\"> Name is required</div>\\n                          </div>\\n                      </div>\\n</div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"> \\n                      <label>Description :</label></div>\\n                      <div class=\\\"col-md-3\\\">\\n                      <input type=\\\"text\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\" /></div>\\n                     </div>\\n                     <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"col-md-6\\\">\\n                      <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.description.errors.required\\\" style=\\\"color:red;\\\">Please write description</div>\\n                      </div>\\n                      </div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <div class=\\\"row\\\">\\n                             <div class=\\\"col-md-3\\\"> <label>Price :</label></div>\\n                     <div class=\\\"col-md-3\\\">  <input type=\\\"text\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.price.errors }\\\" /></div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"col-md-6\\\">\\n                      <div *ngIf=\\\"submitted && f.price.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.price.errors.required\\\" style=\\\"color:red;\\\">please enter iteam price</div>\\n                     </div>\\n                     </div>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" >\\n                      <button class=\\\"btn btn-primary\\\"  style=\\\"background-color: black;color:white\\\">Submit</button>\\n                  </div>\\n              </form>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router,  } from '@angular/router'; // CLI imports router\n\n@Component({\n  selector: 'app-additeam',\n  templateUrl: './additeam.component.html',\n  styleUrls: ['./additeam.component.css']\n})\nexport class AdditeamComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder,public httpclient:HttpClient,private Routes:Router) { }\n\n  ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['', Validators.required],\n        price: ['', [Validators.required]]\n      });\n  }\npublic userdata=[];\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\npublic adddata=[]\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.registerForm.invalid) {\n          return;\n      }\n      if (this.registerForm.valid) {\n          \n\n     let  dataurl='http://localhost:3000/posts'\n     const formData=new FormData();\n         \n    this.httpclient.post<any>(dataurl,this.registerForm.value).subscribe((response=>{ this. userdata = response } ) );\n    this.Routes.navigate(['iteamdata'])\n \n  }\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'inventory';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AdddataComponent } from './adddata/adddata.component';\nimport {MatButtonModule,MatTableModule,MatIconModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AdditeamComponent } from './additeam/additeam.component';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n//import { DataTablesModule } from 'angular-datatables';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'iteamdata', pathMatch: 'full' },\n\n  { path: 'iteamdata', component: AdddataComponent },\n  { path: 'additeam', component: AdditeamComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdddataComponent,\n    AdditeamComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatTableModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    MatIconModule\n   // DataTablesModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [RouterModule]\n\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}